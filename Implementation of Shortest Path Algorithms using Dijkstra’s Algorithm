#include <stdio.h>
#include <limits.h>
#define MAX 100
#define INF INT_MAX

int minDistance(int dist[], int visited[], int n) {
    int min = INF, minIndex = -1;
    for (int i = 0; i < n; i++) {
        if (!visited[i] && dist[i] < min) {
            min = dist[i];
            minIndex = i;
        }
    }
    return minIndex;
}

void dijkstra(int graph[MAX][MAX], int n, int src) {
    int dist[MAX], visited[MAX] = {0};
    for (int i = 0; i < n; i++)
        dist[i] = INF;
    dist[src] = 0;

    for (int i = 0; i < n - 1; i++) {
        int u = minDistance(dist, visited, n);
        if (u < 0) break;
        visited[u] = 1;
        for (int v = 0; v < n; v++) {
            if (!visited[v] && graph[u][v] && dist[u] != INF &&
                dist[u] + graph[u][v] < dist[v]) {
                dist[v] = dist[u] + graph[u][v];
            }
        }
    }

    printf("Vertex\tDistance from Source\n");
    for (int i = 0; i < n; i++)
        printf("%d\t%d\n", i, dist[i]);
}

int main() {
    int n = 5;
    int graph[MAX][MAX] = {
        {0, 6, 0, 0, 7},
        {0, 0, 5, -4, 8},
        {0, 0, 0, 0, 0},
        {2, 0, 7, 0, 0},
        {0, 0, -3, 9, 0}
    };
    dijkstra(graph, n, 0);
    return 0;
}
